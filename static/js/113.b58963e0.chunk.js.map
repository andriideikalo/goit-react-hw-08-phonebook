{"version":3,"file":"static/js/113.b58963e0.chunk.js","mappings":"0PAIaA,EAAOC,EAAAA,EAAAA,KAAH,+KASJC,EAAMD,EAAAA,EAAAA,IAAH,kKASHE,EAAQF,EAAAA,EAAAA,GAAH,0G,IAMGA,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6K,kBClBZI,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAGDG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBY,SAAU,SAAAC,GACRN,GAASO,EAAAA,EAAAA,IAAM,CAAED,OAAAA,IAClB,IAGH,OACE,SAAChB,EAAD,WACE,UAACF,EAAD,CAAMiB,SAAUH,EAAOM,aAAvB,WACE,SAACjB,EAAD,0BACA,SAACkB,EAAA,EAAD,CACEC,GAAI,CACFC,OAAQ,IAEVC,YAAY,cACZC,WAAS,EACTC,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOhB,EAAOI,OAAOX,MACrBwB,SAAUjB,EAAOkB,aACjBC,MAAOnB,EAAOoB,QAAQ3B,OAAS4B,QAAQrB,EAAOsB,OAAO7B,OACrD8B,WAAYvB,EAAOoB,QAAQ3B,OAASO,EAAOsB,OAAO7B,SAEpD,SAACc,EAAA,EAAD,CACEC,GAAI,CAAEC,OAAQ,IACdC,YAAY,iBACZC,WAAS,EACTC,KAAK,QACLC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOhB,EAAOI,OAAOT,SACrBsB,SAAUjB,EAAOkB,aACjBC,MAAOnB,EAAOoB,QAAQzB,UAAY0B,QAAQrB,EAAOsB,OAAO3B,UACxD4B,WAAYvB,EAAOoB,QAAQzB,UAAYK,EAAOsB,OAAO3B,YAEvD,SAAC8B,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYhB,WAAS,EAACa,KAAK,SAA3D,uBAMP,ECxEc,SAASI,IACtB,OACE,4BACE,sCACA,SAAC/B,EAAD,MAGL,C","sources":["components/LoginForm/LoginFormStyled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { Field } from 'formik';\n\nexport const Form = styled.form`\n  position: absolute;\n  margin-top: 230px;\n  width: 320px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  background-color: gray;\n  padding: 25px;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  height: 700px;\n  margin: 0 auto;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin-bottom: 50px;\n  border-bottom: 1px solid white;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin: 0 auto;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  cursor: pointer;\n  font-size: 15px;\n  background-color: gray;\n`;\n","// Exenple\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport { logIn } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { Form, Box, Title } from './LoginFormStyled';\nimport TextField from '@mui/material/TextField';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(logIn({ values }));\n    },\n  });\n\n  return (\n    <Box>\n      <Form onSubmit={formik.handleSubmit}>\n        <Title>Login form</Title>\n        <TextField\n          sx={{\n            height: 65,\n          }}\n          placeholder=\"Enter email\"\n          fullWidth\n          size=\"small\"\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          sx={{ height: 65 }}\n          placeholder=\"Enter password\"\n          fullWidth\n          size=\"small\"\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Enter\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","Box","Title","Field","validationSchema","yup","email","required","password","min","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","logIn","handleSubmit","TextField","sx","height","placeholder","fullWidth","size","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","Login"],"sourceRoot":""}